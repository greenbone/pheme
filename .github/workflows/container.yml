name: Container Image Builds

on:
  push:
    branches:
      - main
    tags: ["v*"]
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  images:
    name: Build and upload container images
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
      - uses: greenbone/actions/is-latest-tag@v3
        id: latest
      - name: Setup container meta information
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: greenbone/pheme
          labels: |
            org.opencontainers.image.vendor=Greenbone
            org.opencontainers.image.base.name=debian/bullseye-slim
          flavor: latest=false # no latest container tag for git tags
          tags: |
            # use version, major.minor and major  for tags
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}

            # use edge for default branch
            type=edge

            # set label for non-published pull request builds
            type=ref,event=pr

            # when a new git tag is created set stable and a latest tags
            type=raw,value=latest,enable=${{ steps.latest.outputs.is-latest-tag == 'true' }}
            type=raw,value=stable,enable=${{ steps.latest.outputs.is-latest-tag == 'true' }}
      - name: Login to GitHub Container Registry
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and push Container image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          platforms: linux/amd64,linux/arm64
          file: .docker/pheme.Dockerfile
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
